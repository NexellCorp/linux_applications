
#CROSS_COMPILE := arm-linux-gnueabihf-
CC  = $(CROSS_COMPILE)gcc
CPP = $(CROSS_COMPILE)g++

CFLAGS  :=  -Wall -std=c++11 
#CFLAGS  +=  -mfloat-abi=hard
CFLAGS  += -DTINY_ALSA 
#CFLAGS  += -DSUPPORT_AEC_PCMOUT



ifeq ($(DEBUG),y)
CFLAGS  += -g 
CFLAGS  += -fno-omit-frame-pointer 
CFLAGS  += -fstack-protector-all
LDFLAGS += -rdynamic # '-rdynamic' or '-Wl,export-dynamic' 
LDFLAGS += -static
else
CFLAGS  += -O3 
CFLAGS  += -fomit-frame-pointer 
endif

COBJS	:=
CPPOBJS	:= ec_test.o audioplay_dummy.o nx_agc_new.o nx_pdm.o PDM_LPF.o
#LIBS	:= libPreproc1.a
#LIBS	+= libtinyalsa.a
LIBS	+= -lpthread -lm 
#LIBS	+= -lasound
OBJS	:= $(COBJS) $(CPPOBJS)

TARGET = ec_test

all : $(TARGET)

$(TARGET) : depend $(OBJS)
	$(CPP) -o $@ $(LDFLAGS) $(OBJS) $(LIBS)

.PHONY: clean

clean :
	rm -rf $(OBJS) $(TARGET) core .depend

ifeq (.depend,$(wildcard .depend))
include .depend
endif

SRCS := $(COBJS:.o=.c) $(CPPOBJS:.o=.cpp)
depend dep:
	$(CC)  -M $(CFLAGS) $(SRCS) > .depend

%.o: %.c
	$(CC) $(CFLAGS) $(INCLUDE) -c -o $@ $<

%.o: %.cpp
	$(CPP) $(CFLAGS) $(INCLUDE) -c -o $@ $<
